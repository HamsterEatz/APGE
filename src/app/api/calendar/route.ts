import { NextRequest } from 'next/server';
import { addEvent } from './model';
import getEvents from './model/getEvents';
import sendEmail from '../email/sendEmail';
import { getServerSession } from 'next-auth';
import { authOptions } from '../auth/[...nextauth]';

export async function GET(req: NextRequest) {
    try {
        const start = await req.nextUrl.searchParams?.get('start');
        const end = await req.nextUrl.searchParams?.get('end');
        if (start && end) {
            const data = await getEvents(start, end);
            return new Response(JSON.stringify(data));
        }
        throw new Error('Date not defined!');
    } catch (e: any) {
        return new Response(null, { status: 401, statusText: e.message });
    }
}

export async function POST(req: Request) {
    try {
        const formData = await req?.formData();
        if (!formData) {
            throw new Error('Missing payload!');
        }
        let payload: any = {};
        formData.forEach((v, k) => payload[k] = v);
        const calRes = await addEvent(payload as any);
        const emailHTML = async (isSender: boolean) => {
            const session = await getServerSession(authOptions);
            const sender = session?.user;
            let html = `<html lang="en">
        <body>
            <h3><b>
                ${isSender ?
                    `${sender!!.name} (${sender!!.email}) has created an event with you!` :
                    `You have created the following event with ${process.env.NEXT_PUBLIC_GOOGLE_CALENDAR_ID}`
                }
            </b></h3>
            <ul>
                <li>
                    <strong>Name:</strong>
                    <span>${payload.eventName}</span>
                </li>
                <li>
                    <div>
                        <strong>Start:</strong>
                        <span>${payload.startDate}</span>
                    </div>
                </li>
                <li>
                    <div>
                        <strong>End:</strong>
                        <span>${payload.endDate}</span>
                    </div>
                </li>
                ${payload.description ? `<li>
                    <div>
                        <strong>Description:</strong>
                        <span>${payload.description}</span>
                    </div>
                </li>` : ''}
                ${payload.location ? `<li>
                    <div>
                        <strong>Location:</strong>
                        <span>${payload.location}</span>
                    </div>
                </li>` : ''}
            </ul>
            <h5><b>> This is an autogenerated email, please do NOT reply.</b></h5>
        </body>
    </html>`;
            html = html.replaceAll('\n', '');
            return html;
        };

        const emailRes = await sendEmail('Acknowledgement of event creation', emailHTML);

        return new Response(JSON.stringify({
            addCalendarResponse: calRes,
            sendEmailResponse: emailRes
        }), { status: 201 });
    } catch (e: any) {
        return new Response(null, { status: 401, statusText: e.message });
    }
}